[{"/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/index.js":"1","/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/App.js":"2","/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/Components/login.js":"3","/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/components/login.js":"4","/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/config/database.js":"5","/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/components/signup.js":"6","/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/components/homepage.js":"7"},{"size":219,"mtime":1611951140912,"results":"8","hashOfConfig":"9"},{"size":2490,"mtime":1612561053447,"results":"10","hashOfConfig":"9"},{"size":0,"mtime":1611957181132,"results":"11","hashOfConfig":"9"},{"size":3279,"mtime":1612474281220,"results":"12","hashOfConfig":"9"},{"size":502,"mtime":1612381269681,"results":"13","hashOfConfig":"9"},{"size":3426,"mtime":1612474267338,"results":"14","hashOfConfig":"9"},{"size":1154,"mtime":1612727854584,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"b3rz4h",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/index.js",[],["33","34"],"/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/App.js",["35"],"import React, { useState, useEffect } from 'react';\nimport Login from './components/login';\nimport firebase from './config/database';\nimport Homepage from './components/homepage';\n\n/**\n * 1. Need to associate first name and last name to account.\n * 2. Need to remember its logged in.\n */\n\nconst App = () => {\n  const [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ emailErrorMessage, setEmailErrorMessage ] = useState('');\n  const [ passwordErrorMessage, setPasswordErrorMessage ] = useState('');\n  const [ user, setUser ] = useState('');\n\n  const handleSignUp = () => {\n    clearErrors();\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        console.log(\"New account successfully created.\");\n    })\n    .catch((error) => {\n      handleError(error);\n    })\n  }\n\n  const handleLogin = () => {\n    clearErrors();\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        console.log(\"User successfully logged in.\")\n      })\n      .catch((error) => {\n        handleError(error);\n      })\n  }\n\n  const handleLogout = () => {\n    firebase.auth().signOut().then(() => {\n      //sign-out\n    }).catch((error) => {\n    });\n  }\n\n  const handleError = (error) => {\n    switch(error.code) {\n      case \"auth/invalid-email\":\n      case \"auth/user-disabled\":\n      case \"auth/user-not-found\":\n      case \"auth/email-already-in-use\":\n        setEmailErrorMessage(error.message);\n        break;\n\n      case \"auth/wrong-password\":\n      case \"auth/weak-password\":\n        setPasswordErrorMessage(error.message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  const clearErrors = () => {\n    setEmailErrorMessage('');\n    setPasswordErrorMessage('');\n  }\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged((userCredential) => {\n      if(userCredential){\n        setUser(userCredential);\n      }\n\n      else{\n        setUser(\"\");\n      }\n    })\n  }\n\n  useEffect(() =>{\n    authListener();\n  }, [])\n\n\n  return(\n    <div>\n      {user ?\n        <Homepage /> :\n        <Login\n          email={email}\n          setEmail={setEmail}\n          password={password}\n          setPassword={setPassword}\n          handleLogin={handleLogin}\n          emailErrorMessage={emailErrorMessage}\n          passwordErrorMessage={passwordErrorMessage}\n          handleSignUp={handleSignUp}\n        />\n      }\n    </div>\n  )\n}\n\nexport default App;","/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/Components/login.js",[],"/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/components/login.js",[],"/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/config/database.js",[],"/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/components/signup.js",["36"],"import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nconst Signup = (props) => {\r\n  const { clicked,\r\n          setClicked,\r\n          handleSignUp,\r\n          email,\r\n          setEmail,\r\n          password,\r\n          setPassword,\r\n          emailErrorMessage,\r\n          passwordErrorMessage } = props;\r\n  const [ errorEmail, setErrorEmail ] = useState(false);\r\n  const [ errorPassword, setErrorPassword ] = useState(false);\r\n  const [ showPassword, setShowPassword ] = useState(false);\r\n\r\n  const flagError = () => {\r\n    if(emailErrorMessage !== '') {\r\n      setErrorEmail(true);\r\n    }\r\n\r\n    else if(passwordErrorMessage !== ''){\r\n      setErrorPassword(true);\r\n    }\r\n\r\n    else{\r\n      setErrorEmail(false);\r\n      setErrorPassword(false);\r\n    }\r\n    }\r\n\r\n  useEffect(() =>{\r\n    flagError();\r\n  })\r\n\r\n  return(\r\n    <div className=\"signup\">\r\n      <Dialog open={clicked} aria-labelledby=\"form-dialog-title\">\r\n        <div className=\"close-icon\">\r\n          <CloseIcon onClick={() => setClicked(!clicked)} />\r\n        </div>\r\n        <DialogTitle>Sign up</DialogTitle>\r\n        <DialogContent dividers>\r\n          <TextField\r\n            id=\"first-name-input\"\r\n            label=\"First Name\"\r\n            variant=\"outlined\"\r\n            autoFocus\r\n            required\r\n\r\n          />\r\n\r\n          <TextField\r\n            id=\"last-name-input\"\r\n            label=\"Last Name\"\r\n            variant=\"outlined\"\r\n            required\r\n            style={{ marginLeft: '10px'}}\r\n\r\n          />\r\n\r\n          <br /><br />\r\n\r\n          <TextField\r\n            id=\"email-signup-input\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            error={errorEmail}\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <br /><br />\r\n\r\n          <TextField\r\n            id=\"password-signup-input\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            error={errorPassword}\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            InputProps={{\r\n              endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={() => setShowPassword(!showPassword)}>\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n\r\n          <p className=\"error-message\">{passwordErrorMessage}</p>\r\n          <p className=\"error-message\">{emailErrorMessage}</p>\r\n        </DialogContent>\r\n\r\n        <DialogActions >\r\n          <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={handleSignUp}>\r\n            Sign up\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup;","/mnt/c/Users/lex_0/Desktop/React Projects/socialmedia/src/components/homepage.js",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":40,"column":9,"nodeType":"44","messageId":"45","endLine":40,"endColumn":21},{"ruleId":"46","severity":1,"message":"47","line":94,"column":13,"nodeType":"48","endLine":94,"endColumn":58},{"ruleId":"49","severity":1,"message":"50","line":18,"column":9,"nodeType":"51","messageId":"52","endLine":18,"endColumn":13},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'handleLogout' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]